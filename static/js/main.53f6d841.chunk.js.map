{"version":3,"sources":["data.js","components/SideMenu/SideMenu.js","components/InfoDiv/InfoDiv.js","components/App/App.js","utils/checkPassword.js","index.js"],"names":["colors","bg_colors","input_state","input_visibility","true","false","lowercase","uppercase","numbers","special_chars","all","concat","SideMenu","inputEl","setBgColorEnabled","setBgColor","setVisibility","setInfoDivEnabled","useState","menuToggle","setMenuToggle","id","className","class","onClick","prevBool","current","focus","InfoDiv","infoDivEnabled","style","display","App","inputColor","setInputColor","bgColor","inputState","setInputState","invisible","visibility","bgColorEnabled","useEffect","document","title","String","useRef","handlePassword","pwd_text","points","i","length","includes","checkPassword","backgroundColor","transition","type","maxLength","ref","onChange","ev","target","value","href","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.53f6d841.chunk.js","sourcesContent":["const colors = {\r\n  default: \"#ffffff\",\r\n  invalid: \"#ffffff\",\r\n  unsecure: \"#f54242\",\r\n  weak: \"#f59642\",\r\n  poor: \"#f5e042\",\r\n  good: \"#ddf542\",\r\n  robust: \"#51f542\",\r\n};\r\n\r\nconst bg_colors = {\r\n  default: \"#ffffff\",\r\n  invalid: \"#ffffff\",\r\n  unsecure: \"#f5abad\",\r\n  weak: \"#f5ceab\",\r\n  poor: \"#f5ecab\",\r\n  good: \"#ebf5ab\",\r\n  robust: \"#b1f5ab\",\r\n};\r\n\r\nconst input_state = {\r\n  default: \"‌‌ \",\r\n  invalid: \"Invalid character\",\r\n  unsecure: \"Unsecure\",\r\n  weak: \"Weak\",\r\n  poor: \"Poor\",\r\n  good: \"Good\",\r\n  robust: \"Robust\",\r\n};\r\n\r\nconst input_visibility = {\r\n  true: \"password\",\r\n  false: \"text\",\r\n};\r\n\r\nconst lowercase = [...\"abcdefghijklmnopqrstuvwxyz\"];\r\nconst uppercase = [...\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"];\r\nconst numbers = [...\"1234567890\"];\r\nconst special_chars = [...\"@.-_\"];\r\n\r\nconst all = lowercase.concat(uppercase, numbers, special_chars);\r\n\r\nexport {\r\n  colors,\r\n  bg_colors,\r\n  input_state,\r\n  input_visibility,\r\n  lowercase,\r\n  uppercase,\r\n  numbers,\r\n  special_chars,\r\n  all\r\n};","import { useState } from 'react'\r\nimport { bg_colors, input_visibility } from '../../data'\r\nimport './SideMenu.css'\r\n\r\nexport const SideMenu = ({ inputEl, setBgColorEnabled, setBgColor, setVisibility, setInfoDivEnabled }) => {\r\n  // Menu states\r\n  const [menuToggle, setMenuToggle] = useState(false);\r\n\r\n  return (\r\n    <div id=\"wrapper-menu\">\r\n      {!menuToggle ? (\r\n        <a\r\n          class=\"menu-button\"\r\n          onClick={() => setMenuToggle((prevBool) => !prevBool)}\r\n        >\r\n          Menu\r\n        </a>\r\n      ) : (\r\n        <div className=\"side-menu\">\r\n          <a\r\n            class=\"menu-button\"\r\n            onClick={() => setMenuToggle((prevBool) => !prevBool)}\r\n          >\r\n            X\r\n          </a>\r\n          <br></br>\r\n          <a\r\n            className=\"side-menu-item\"\r\n            onClick={() => {\r\n              setBgColorEnabled((prevBool) => !prevBool);\r\n              setMenuToggle((prevBool) => !prevBool);\r\n              setBgColor(bg_colors.default);\r\n              inputEl.current.focus();\r\n            }}\r\n          >\r\n            Toggle background color\r\n          </a>\r\n          <a\r\n            className=\"side-menu-item\"\r\n            onClick={() => {\r\n              setVisibility((prevBool) => !prevBool);\r\n            }}\r\n          >\r\n            Toggle password visibility\r\n          </a>\r\n          <a\r\n            className=\"side-menu-item\"\r\n            onClick={() => {\r\n              setInfoDivEnabled((prevBool) => !prevBool);\r\n            }}\r\n          >\r\n            How to improve my password?\r\n          </a>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import {useState} from 'react'\r\nimport './InfoDiv.css'\r\n\r\nexport const InfoDiv = ({ infoDivEnabled, setInfoDivEnabled }) => {\r\n  return (\r\n    <div\r\n      id=\"info-div\"\r\n      style={infoDivEnabled ? { display: \"block\" } : { display: \"none\" }}\r\n    >\r\n      <div id=\"info-div-top\">\r\n        <a class=\"menu-button\" onClick={() => setInfoDivEnabled(false)}>\r\n          X\r\n        </a>\r\n      </div>\r\n      <div id=\"info-div-text\">\r\n        <p>\r\n          <b>\r\n            <u>How to improve your password?</u>\r\n          </b>\r\n        </p>\r\n        <br></br>\r\n        <a>· Use more than 8 characters</a>\r\n        <div id=\"separator\"></div>\r\n        <a>· Use lowercase, uppercase, numbers and special characters</a>\r\n        <div id=\"separator\"></div>\r\n        <a>· Don't use personal info, like dates, names or hobbies.</a>\r\n        <div id=\"separator\"></div>\r\n        <a>· Don't use the same password on every website.</a>\r\n        <div id=\"separator\"></div>\r\n        <a>\r\n          · Try not to use predictable passwords (1234, iloveyou, hello123...)\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import {useState, useRef, useEffect} from 'react'\nimport './App.css';\nimport {SideMenu} from '../SideMenu/SideMenu';\nimport {InfoDiv} from '../InfoDiv/InfoDiv'\nimport { checkPassword } from \"../../utils/checkPassword\";\nimport {\n  colors,\n  bg_colors,\n  input_state,\n  input_visibility,\n} from '../../data';\n\nfunction App() {\n  // Input states\n  const [inputColor, setInputColor] = useState(colors.default);\n  const [bgColor, setBgColor] = useState(bg_colors.default);\n  const [inputState, setInputState] = useState(input_state.default);\n  const [visibility, setVisibility] = useState(input_visibility.invisible);\n\n  const [bgColorEnabled, setBgColorEnabled] = useState(true);\n  const [infoDivEnabled, setInfoDivEnabled] = useState(false);\n\n  useEffect(() => {\n    if (\n      inputState === \"Invalid character\" ||\n      inputState === \"Unsecure\" ||\n      inputState === \"Weak\" ||\n      inputState === \"Poor\" ||\n      inputState === \"Good\" ||\n      inputState === \"Robust\"\n    ) {\n      document.title = String(inputState);\n    } else {\n      document.title = \"Password Checker\";\n    }\n  }, [inputState])\n\n  const inputEl = useRef(null);\n\n  const handlePassword = (pwd_text) => {\n    checkPassword(\n      pwd_text,\n      setInputColor,\n      setInputState,\n      setBgColor,\n      bgColorEnabled\n    );\n  };\n\n  return (\n    <div className=\"wrapper\">\n      <SideMenu\n        inputEl={inputEl}\n        setBgColorEnabled={setBgColorEnabled}\n        setBgColor={setBgColor}\n        setVisibility={setVisibility}\n        setInfoDivEnabled={setInfoDivEnabled}\n      />\n\n      <InfoDiv\n        infoDivEnabled={infoDivEnabled}\n        setInfoDivEnabled={setInfoDivEnabled}\n      />\n\n      <div\n        className=\"App\"\n        style={{\n          backgroundColor: bgColor,\n          transition: \"background-color 0.3s ease-in-out\",\n        }}\n      >\n        <h2 className=\"h2-title\">Type a password to check</h2>\n        <input\n          className=\"input\"\n          type={visibility ? \"text\" : \"password\"}\n          style={{\n            backgroundColor: inputColor,\n            transition: \"background-color 0.3s ease-in-out\",\n          }}\n          maxLength=\"20\"\n          ref={inputEl}\n          onChange={(ev) => handlePassword(ev.target.value)}\n        ></input>\n\n        <br></br>\n        <p className=\"p-text\">{inputState}</p>\n\n        <footer className=\"footer\">\n          <p className=\"footer-text\">\n            Made with &lt;3 by alesbe.{\" \"}\n            <a href=\"https://github.com/alesbe/pwd-security-checker\">Github</a>\n          </p>\n        </footer>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import {\r\n  colors,\r\n  bg_colors,\r\n  input_state,\r\n  lowercase,\r\n  uppercase,\r\n  numbers,\r\n  special_chars,\r\n  all\r\n} from \"../data\";\r\n\r\nexport function checkPassword(\r\n  pwd_text,\r\n  setInputColor,\r\n  setInputState,\r\n  setBgColor,\r\n  bgColorEnabled,\r\n) {\r\n  let points = 0;\r\n\r\n  // Check empty\r\n  if (pwd_text === \"\") {\r\n    setInputColor(colors.default);\r\n    setInputState(input_state.default);\r\n    bgColorEnabled && setBgColor(bg_colors.default);\r\n    return;\r\n  }\r\n  \r\n  // Check invalid character\r\n  for (let i = 0; i < pwd_text.length; i++) {\r\n    if(!all.includes(pwd_text[i])){\r\n      setInputColor(colors.default);\r\n      setInputState(input_state.invalid);\r\n      bgColorEnabled && setBgColor(bg_colors.invalid);\r\n      return;\r\n    }\r\n  }\r\n\r\n  // Check >8 chars\r\n  if (pwd_text.length < 8) {\r\n    setInputColor(colors.unsecure);\r\n    setInputState(input_state.unsecure);\r\n    bgColorEnabled && setBgColor(bg_colors.unsecure);\r\n    return;\r\n  }\r\n\r\n  // Check if contains lowercase\r\n  for (let i = 0; i < lowercase.length; i++) {\r\n    if (pwd_text.includes(lowercase[i])) {\r\n      points++;\r\n      break;\r\n    }\r\n  }\r\n\r\n  // Check if contains uppercase\r\n  for (let i = 0; i < uppercase.length; i++) {\r\n    if (pwd_text.includes(uppercase[i])) {\r\n      points++;\r\n      break;\r\n    }\r\n  }\r\n\r\n  // Check if contains numbers\r\n  for (let i = 0; i < numbers.length; i++) {\r\n    if (pwd_text.includes(numbers[i])) {\r\n      points++;\r\n      break;\r\n    }\r\n  }\r\n\r\n  // Check if contains special chars\r\n  for (let i = 0; i < special_chars.length; i++) {\r\n    if (pwd_text.includes(special_chars[i])) {\r\n      points++;\r\n      break;\r\n    }\r\n  }\r\n\r\n  switch (points) {\r\n    case 1:\r\n      setInputColor(colors.weak);\r\n      setInputState(input_state.weak);\r\n      bgColorEnabled && setBgColor(bg_colors.weak);\r\n      break;\r\n\r\n    case 2:\r\n      setInputColor(colors.poor);\r\n      setInputState(input_state.poor);\r\n      bgColorEnabled && setBgColor(bg_colors.poor);\r\n      break;\r\n\r\n    case 3:\r\n      setInputColor(colors.good);\r\n      setInputState(input_state.good);\r\n      bgColorEnabled && setBgColor(bg_colors.good);\r\n      break;\r\n\r\n    case 4:\r\n      setInputColor(colors.robust);\r\n      setInputState(input_state.robust);\r\n      bgColorEnabled && setBgColor(bg_colors.robust);\r\n      break;\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}